<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:configuration="http://cxf.apache.org/transports/http/configuration"
	xmlns:jaxrs="http://cxf.apache.org/jaxrs"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:security="http://cxf.apache.org/configuration/security"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:ctx="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd
		http://cxf.apache.org/transports/http/configuration http://cxf.apache.org/schemas/wsdl/http-conf.xsd
		http://cxf.apache.org/jaxrs http://cxf.apache.org/schemas/jaxrs.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd
		http://cxf.apache.org/configuration/security http://cxf.apache.org/schemas/configuration/security.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd"
	default-autowire="default">
	
	<tx:annotation-driven transaction-manager="transactionManager"/>
	
	<bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager" >
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<beans profile="embedded-local, postgres-local" default-autowire="default" >
		<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">	
		    <property name="hibernateProperties">
		       <props>
		         <prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQL9Dialect</prop>
		         <prop key="hibernate.show_sql">false</prop>
		         <prop key="hibernate.hbm2ddl.auto">validate</prop>
		         <prop key="hibernate.connection.url">jdbc:postgresql:postgres</prop>
		       </props>
		     </property> 
		     <property name="packagesToScan">
				<list>
			    	<value>com.nibbledebt.core.data.model</value>
				</list>
		      </property> 
		      <property name="dataSource" ref="dataSource" />
	    </bean>
	</beans>
	
	<beans profile="embedded-local" default-autowire="default" >
    	<jdbc:embedded-database id="dataSource" type="H2">
<!--     		<jdbc:script location="classpath:/com/nibbledebt/data/refdata.sql"/> -->
		</jdbc:embedded-database>
	    
 	</beans>
 	
 	<beans profile="postgres-local" default-autowire="default" >
	 	<bean id="dataSource"  class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
			<constructor-arg>
				<bean class="com.zaxxer.hikari.HikariConfig">
				    <property name="poolName" value="springHikariCP" />
				    <property name="maximumPoolSize" value="20" />
				    <property name="connectionTestQuery" value="select 1" />
				    <property name="driverClassName" value="org.postgresql.Driver" />
				    <property name="jdbcUrl" value="jdbc:postgresql://localhost:5432/nweb" />
				    <property name="username" value="nweb" />
				    <property name="password" value="nweb" />		
				</bean>
			</constructor-arg>
		</bean>
 	</beans>
 	
 	
 	<beans profile="heroku-dev" default-autowire="default" > 	
	 	<bean  id="dbUrl" class="java.net.URI">
		    <constructor-arg value="#{systemEnvironment['DATABASE_URL']}"/>
		</bean>
	
		<bean id="dataSource"  class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
			<constructor-arg>
				<bean class="com.zaxxer.hikari.HikariConfig">
				    <property name="poolName" value="springHikariCP" />
				    <property name="maximumPoolSize" value="200" />
				    <property name="connectionTestQuery" value="select 1" />
				    <property name="driverClassName" value="org.postgresql.Driver" />
				    <property name="jdbcUrl" value="#{ 'jdbc:postgresql://' + @dbUrl.getHost() + ':' + @dbUrl.getPort() + @dbUrl.getPath() }" />
				    <property name="username" value="#{ @dbUrl.getUserInfo().split(':')[0] }" />
				    <property name="password" value="#{ @dbUrl.getUserInfo().split(':')[1] }" />		
				</bean>
			</constructor-arg>
		</bean>
 	
 		<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">	
		    <property name="hibernateProperties">
		       <props>
		         <prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQL9Dialect</prop>
		         <prop key="hibernate.show_sql">true</prop>
		         <prop key="hibernate.hbm2ddl.auto">create-drop</prop>
		         <prop key="hibernate.connection.url">jdbc:postgresql:postgres</prop>
		       </props>
		     </property> 
		     <property name="packagesToScan">
				<list>
			    	<value>com.nibbledebt.core.data.model</value>
				</list>
		      </property> 
		      <property name="dataSource" ref="dataSource" />
	    </bean>
 	</beans>
	
	
	

	
</beans>

